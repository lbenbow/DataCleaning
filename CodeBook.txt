Code Book - Getting and Cleaning Data Course

See section below (Feature Selection) for a description of the data and files originally provided.

Section 1) Data for analysis

Assumption(s):
==============
1) The data are already downloaded and extracted (download was not specified in the rubric).
2) The data files (test & training specific) are consolidated in the working directory prior to processing/analysis along with 'features_info.txt', 'features.txt' and
'activity_labels.txt'.

File descriptions:
==================
- 'features_info.txt': Shows information about the variables used on the feature vector.
- 'features.txt': List of all features.
- 'activity_labels.txt': Links the class labels with their activity name.
- 'X_train.txt': Training set.
- 'y_train.txt': Training labels.
- 'subject_train.txt': Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30.
- 'X_test.txt': Test set.
- 'y_test.txt': Test labels.
- 'subject_text.txt': Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30.

Variables:
==========
- data_test: 			- training (data activities + subjects + measurements)
- data_train:			- test data (activities + subjects + measurements)
- data_combined:			- combine data ()fron test ans training subjects)
- colnames:				- measurements 
- data_mean_std:			- subset of data containing only means and standard deviations
- data_merged:			- activity labels associate das factors replacing numeric levels
- data_indep_means:		- means of values by activity & subject

 

Processing Steps:
=================
1) Load dplyr package which contains some required functions: 
2) Read Data
	read.table used to read each file into it own dataframe
3) Combine test & train data
	cbind used to join subject, y (activity code), 
4) Apply features
	Convert features dataframe to character vector, generate colnames by prepending "activity" & "subject" and
	set column names for the combined data to this list.
5) Filter Mean & Std
	grep() used to keep only activity, subject, mean and std columns.
6) Merge/join data on "activity id"
	merge() function used to join the activity and combined data in order to provide the ""descriptive activity names" (Requirement 3)
7) Drop extra id column from activity
	Removed the extra id column which came along with the activity_labels data.
8) Sort data by activity, subject
	arrange() used to order the data by activity, then subject.
9) Calculate & Generate Independent mean of data by activity & subject
	group_by(), and summarize_each() and %>% (pipes) functionality of dplyr used to provide the means by activity and subject.
10) Write the independent means data to ""independent_means.txt".




===================================================================
Feature description from study

Feature Selection 
=================

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Then they were filtered using a median filter and a 3rd order low pass Butterworth filter with a corner frequency of 20 Hz to remove noise. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ) using another low pass Butterworth filter with a corner frequency of 0.3 Hz. 

Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 

Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 

These signals were used to estimate variables of the feature vector for each pattern:  
'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions.

tBodyAcc-XYZ
tGravityAcc-XYZ
tBodyAccJerk-XYZ
tBodyGyro-XYZ
tBodyGyroJerk-XYZ
tBodyAccMag
tGravityAccMag
tBodyAccJerkMag
tBodyGyroMag
tBodyGyroJerkMag
fBodyAcc-XYZ
fBodyAccJerk-XYZ
fBodyGyro-XYZ
fBodyAccMag
fBodyAccJerkMag
fBodyGyroMag
fBodyGyroJerkMag

The set of variables that were estimated from these signals are: 

mean(): Mean value
std(): Standard deviation
mad(): Median absolute deviation 
max(): Largest value in array
min(): Smallest value in array
sma(): Signal magnitude area
energy(): Energy measure. Sum of the squares divided by the number of values. 
iqr(): Interquartile range 
entropy(): Signal entropy
arCoeff(): Autorregresion coefficients with Burg order equal to 4
correlation(): correlation coefficient between two signals
maxInds(): index of the frequency component with largest magnitude
meanFreq(): Weighted average of the frequency components to obtain a mean frequency
skewness(): skewness of the frequency domain signal 
kurtosis(): kurtosis of the frequency domain signal 
bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.
angle(): Angle between to vectors.

Additional vectors obtained by averaging the signals in a signal window sample. These are used on the angle() variable:

gravityMean
tBodyAccMean
tBodyAccJerkMean
tBodyGyroMean
tBodyGyroJerkMean

The complete list of variables of each feature vector is available in 'features.txt'